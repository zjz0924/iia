<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wow.common.dao.MemberDao" >
  <resultMap id="BaseResultMap" type="cn.wow.common.domain.Member" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="username" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="group_id" property="groupId" jdbcType="BIGINT" />
    <result column="creator" jdbcType="BIGINT" property="creator" />
    <association property="group" javaType="cn.wow.common.domain.Group">
    	 <id property="id" column="g_id" />
    	 <result property="name" column="g_name" />
    </association>
  </resultMap>
  
  <sql id="base_columns" >
    m.id, username, password, email, url, address, m.name, group_id, m.create_time, m.creator, g.id g_id, g.name g_name
  </sql>
  
  <select id="selectOne" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select  <include refid="base_columns" /> from member m left join `group` g on g.id = m.group_id where m.id = #{id,jdbcType=BIGINT}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from member where id = #{id,jdbcType=BIGINT}
  </delete>
  
  <insert id="insert" parameterType="cn.wow.common.domain.Member" >
    insert into member (username, password,  email, url, address, name, group_id, create_time, creator)
    values (#{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{groupId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{creator,jdbcType=BIGINT})
  </insert>
  
  <update id="update" parameterType="cn.wow.common.domain.Member" >
    update member
    <set >
      <if test="userName != null and userName != ''" >
        username = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null and password != ''" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null" >
        group_id = #{groupId,jdbcType=BIGINT},
      </if>
      <if test="creator != null">
		creator = #{creator,jdbcType=BIGINT},
	   </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="selectAllList" resultMap="BaseResultMap" parameterType="java.util.Map" >
  	select 
    <include refid="base_columns" />
       from member m left join `group` g on g.id = m.group_id 
     <where>
     	  <if test="userName != null and userName != ''" >
	        and m.username like concat('%', #{userName,jdbcType=VARCHAR}, '%') 
	      </if>
     
		  <if test="name != null and name != ''" >
	        and m.name like concat('%', #{name,jdbcType=VARCHAR}, '%') 
	      </if>
	      
	      <if test="startCreateTime != null and startCreateTime != ''">  
	    	and m.create_time &gt;= #{startCreateTime, jdbcType=TIMESTAMP}
	      </if>
	      
	      <if test="endCreateTime != null and endCreateTime != ''">  
	    	and m.create_time &lt;= #{endCreateTime, jdbcType=TIMESTAMP}
	      </if>
	      
	      <if test="creator != null and creator != ''" >
	        and m.creator = #{creator,jdbcType=BIGINT}
	      </if>
	      
	      <if test="groupId != null and groupId != ''" >
	        and group_id = #{groupId,jdbcType=BIGINT}
	      </if>
      </where>
      
	  <choose>
  		<when test="custom_order_sql != null">
  			order by ${custom_order_sql}
  		</when>
  		<otherwise>
  			order by m.id desc
  		</otherwise>
 	 </choose>
  </select>
  
 
</mapper>