<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wow.common.dao.LinkDao" >
  <resultMap id="BaseResultMap" type="cn.wow.common.domain.Link" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="logo" property="logo" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <sql id="base_columns" >
    id, logo, url, name, sort,create_time
  </sql>
  
  <insert id="insert" parameterType="cn.wow.common.domain.Link" >
    insert into link(logo, url, name, sort, create_time) values (#{logo,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR},
      #{name,jdbcType=VARCHAR},  #{sort,jdbcType=INTEGER},#{createTime,jdbcType=TIMESTAMP})
  </insert>
  
  <select id="selectOne" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="base_columns" />
    from link
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <update id="update" parameterType="cn.wow.common.domain.Link" >
    update link
    <set >
      <if test="logo != null" >
        logo = #{logo,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER}
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from link
    where id = #{id,jdbcType=BIGINT}
  </delete>
  
  <select id="selectAllList" resultMap="BaseResultMap" parameterType="java.util.Map" >
  	select 
    <include refid="base_columns" />
      from link
     <where>
		  <if test="name != null and name != ''" >
	        and name like concat('%', #{name,jdbcType=VARCHAR}, '%') 
	      </if>
	      
	      <if test="startCreateTime != null and startCreateTime != ''">  
	    	and create_time &gt;= #{startCreateTime, jdbcType=TIMESTAMP}
	      </if>
	      
	      <if test="endCreateTime != null and endCreateTime != ''">  
	    	and create_time &lt;= #{endCreateTime, jdbcType=TIMESTAMP}
	      </if>
      </where>
      
	  <choose>
  		<when test="custom_order_sql != null">
  			order by ${custom_order_sql}
  		</when>
  		<otherwise>
  			order by id desc
  		</otherwise>
 	 </choose>
  </select>
  
</mapper>